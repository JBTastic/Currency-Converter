name: Build and Release on Tag

on:
  push:
    tags:
      - "v*.*.*" # reacts to tags like v1.0.0, v2.1.3, etc.

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            ext: ""
          - os: windows
            arch: amd64
            ext: ".exe"
          - os: darwin
            arch: amd64
            ext: ""
          - os: darwin
            arch: arm64
            ext: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install zip (for Windows packaging)
        if: matrix.os == 'windows'
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Build binary and create archive
        run: |
          # Build binary with a fixed name "currency-converter" (add .exe on Windows)
          BIN_NAME="currency-converter"
          [[ "${{ matrix.os }}" == "windows" ]] && BIN_NAME="${BIN_NAME}.exe"

          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o "$BIN_NAME"
          chmod +x "$BIN_NAME" || true

          # Archive name includes OS and architecture as before
          ARCHIVE_NAME="currency-converter-${{ matrix.os }}-${{ matrix.arch }}"

          if [[ "${{ matrix.os }}" == "linux" || "${{ matrix.os }}" == "darwin" ]]; then
            # Create a tar.gz archive containing the binary
            tar -czf "${ARCHIVE_NAME}.tar.gz" "$BIN_NAME"
          elif [[ "${{ matrix.os }}" == "windows" ]]; then
            # Create a zip archive containing the binary
            zip "${ARCHIVE_NAME}.zip" "$BIN_NAME"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: currency-converter-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            currency-converter-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            currency-converter-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        run: |
          for dir in ./artifacts/*; do
            file=$(find "$dir" -type f | head -n 1)
            echo "Uploading $file"
            gh release upload ${{ github.ref_name }} "$file"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
